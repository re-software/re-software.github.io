import './TeaCard.css.proxy.js';
/* src/components/TeaCard.svelte generated by Svelte v3.29.7 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	set_data,
	space,
	text,
	transition_in,
	transition_out
} from "../../web_modules/svelte/internal.js";

import { createEventDispatcher } from "../../web_modules/svelte.js";
import Button from "./Button.js";

function create_default_slot(ctx) {
	let t;

	return {
		c() {
			t = text("Brew");
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

function create_fragment(ctx) {
	let div;
	let h2;
	let t0_value = /*tea*/ ctx[0].name + "";
	let t0;
	let t1;
	let button;
	let current;

	button = new Button({
			props: {
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			}
		});

	button.$on("click", /*clickHandler*/ ctx[1]);

	return {
		c() {
			div = element("div");
			h2 = element("h2");
			t0 = text(t0_value);
			t1 = space();
			create_component(button.$$.fragment);
			attr(div, "class", "tea-card flex flex-col items-center justify-center bg-white rounded-xl shadow p-4 svelte-9q40nq");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, h2);
			append(h2, t0);
			append(div, t1);
			mount_component(button, div, null);
			current = true;
		},
		p(ctx, [dirty]) {
			if ((!current || dirty & /*tea*/ 1) && t0_value !== (t0_value = /*tea*/ ctx[0].name + "")) set_data(t0, t0_value);
			const button_changes = {};

			if (dirty & /*$$scope*/ 8) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i(local) {
			if (current) return;
			transition_in(button.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			destroy_component(button);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	
	let { tea } = $$props;
	const dispatch = createEventDispatcher();

	function clickHandler() {
		dispatch("select", tea);
	}

	$$self.$$set = $$props => {
		if ("tea" in $$props) $$invalidate(0, tea = $$props.tea);
	};

	return [tea, clickHandler];
}

class TeaCard extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { tea: 0 });
	}
}

export default TeaCard;